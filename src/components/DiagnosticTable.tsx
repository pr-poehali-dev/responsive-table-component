import { Badge } from "@/components/ui/badge"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"

interface DiagnosticItem {
  category: string
  items: {
    name: string
    issue?: string
    status: 'good' | 'missing' | 'normal'
    defect?: string
    microLeak?: string
    leak?: string
  }[]
}

const diagnosticData: DiagnosticItem[] = [
  {
    category: "–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞",
    items: [
      { name: "–î–≤–∏–≥–∞—Ç–µ–ª—å", status: "good", defect: "–î–µ—Ñ–µ–∫—Ç" },
      { name: "–ö–æ—Ä–æ–±–∫–∞ –ø–µ—Ä–µ–¥–∞—á", status: "good", defect: "–î–µ—Ñ–µ–∫—Ç" },
      { name: "–•–æ–ª–æ—Å—Ç–æ–π —Ö–æ–¥", status: "good", defect: "–î–µ—Ñ–µ–∫—Ç" }
    ]
  },
  {
    category: "–î–≤–∏–≥–∞—Ç–µ–ª—å", 
    items: [
      { 
        name: "–£—Ç–µ—á–∫–∞ –º–∞—Å–ª–∞", 
        issue: "–ö–ª–∞–ø–∞–Ω–Ω–∞—è –∫—Ä—ã—à–∫–∞", 
        status: "missing", 
        microLeak: "–ú–∏–∫—Ä–æ—É—Ç–µ—á–∫–∞", 
        leak: "–£—Ç–µ—á–∫–∞" 
      },
      { 
        name: "", 
        issue: "–ü—Ä–æ–∫–ª–∞–¥–∫–∞ –≥–æ–ª–æ–≤–∫–∏ –±–ª–æ–∫–∞ —Ü–∏–ª–∏–Ω–¥—Ä–æ–≤", 
        status: "missing", 
        microLeak: "–ú–∏–∫—Ä–æ—É—Ç–µ—á–∫–∞", 
        leak: "–£—Ç–µ—á–∫–∞" 
      },
      { 
        name: "", 
        issue: "–ë–ª–æ–∫ —Ü–∏–ª–∏–Ω–¥—Ä–æ–≤/–º–∞—Å–ª—è–Ω—ã–π –ø–æ–¥–¥–æ–Ω", 
        status: "missing", 
        microLeak: "–ú–∏–∫—Ä–æ—É—Ç–µ—á–∫–∞", 
        leak: "–£—Ç–µ—á–∫–∞" 
      },
      { name: "–î–∞–≤–ª–µ–Ω–∏–µ –º–∞—Å–ª–∞", status: "normal", defect: "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ–∫" },
      { 
        name: "–£—Ç–µ—á–∫–∞ –æ—Ö–ª–∞–∂–¥–∞—é—â–µ–π –∂–∏–¥–∫–æ—Å—Ç–∏", 
        issue: "–ü—Ä–æ–∫–ª–∞–¥–∫–∞ –≥–æ–ª–æ–≤–∫–∏ –±–ª–æ–∫–∞ —Ü–∏–ª–∏–Ω–¥—Ä–æ–≤", 
        status: "missing", 
        microLeak: "–ú–∏–∫—Ä–æ—É—Ç–µ—á–∫–∞", 
        leak: "–£—Ç–µ—á–∫–∞" 
      },
      { 
        name: "", 
        issue: "–ü–æ–º–ø–∞", 
        status: "missing", 
        microLeak: "–ú–∏–∫—Ä–æ—É—Ç–µ—á–∫–∞", 
        leak: "–£—Ç–µ—á–∫–∞" 
      },
      { 
        name: "", 
        issue: "–†–∞–¥–∏–∞—Ç–æ—Ä", 
        status: "missing", 
        microLeak: "–ú–∏–∫—Ä–æ—É—Ç–µ—á–∫–∞", 
        leak: "–£—Ç–µ—á–∫–∞" 
      },
      { name: "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ö–ª–∞–∂–¥–∞—é—â–µ–π –∂–∏–¥–∫–æ—Å—Ç–∏", status: "normal", defect: "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ–∫" },
      { name: "–¢–æ–ø–ª–∏–≤–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞", status: "good", defect: "–î–µ—Ñ–µ–∫—Ç" }
    ]
  }
]

const DiagnosticTable = () => {
  const getStatusBadge = (status: 'good' | 'missing' | 'normal') => {
    switch (status) {
      case 'good':
        return <Badge className="bg-green-600 text-white hover:bg-green-700">–•–æ—Ä–æ—à–æ</Badge>
      case 'missing':
        return <Badge className="bg-green-600 text-white hover:bg-green-700">–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç</Badge>
      case 'normal':
        return <Badge className="bg-green-600 text-white hover:bg-green-700">–ù–æ—Ä–º–∞</Badge>
      default:
        return null
    }
  }

  return (
    <div className="max-w-7xl mx-auto p-4">
      <Card className="bg-white shadow-lg">
        <CardHeader>
          <CardTitle className="text-2xl font-montserrat text-gray-800">–î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π –æ—Ç—á–µ—Ç</CardTitle>
        </CardHeader>
        <CardContent className="p-0">
          {/* Desktop –∏ –ø–ª–∞–Ω—à–µ—Ç - –æ–±—ã—á–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ */}
          <div className="hidden md:block">
            <div className="overflow-hidden">
              <table className="w-full">
                <thead>
                  <tr className="border-b bg-gray-50">
                    <th className="text-left p-4 font-montserrat font-semibold text-gray-700 w-48">
                      –ö–∞—Ç–µ–≥–æ—Ä–∏—è
                    </th>
                    <th className="text-left p-4 font-montserrat font-semibold text-gray-700 flex-1">
                      –ö–æ–º–ø–æ–Ω–µ–Ω—Ç
                    </th>
                    <th className="text-center p-4 font-montserrat font-semibold text-gray-700 w-32">
                      –û—Ü–µ–Ω–∫–∞
                    </th>
                    <th className="text-center p-4 font-montserrat font-semibold text-gray-700 w-32">
                      –°—Ç–∞—Ç—É—Å
                    </th>
                  </tr>
                </thead>
                <tbody>
                  {diagnosticData.map((category, categoryIndex) => (
                    category.items.map((item, itemIndex) => (
                      <tr key={`${categoryIndex}-${itemIndex}`} className="border-b hover:bg-gray-50 transition-colors">
                        <td className="p-4 bg-gray-100 border-r">
                          {itemIndex === 0 && (
                            <div className="font-montserrat font-semibold text-gray-800">
                              {category.category}
                            </div>
                          )}
                        </td>
                        <td className="p-4">
                          <div className="font-open-sans text-gray-800">
                            {item.name}
                            {item.issue && (
                              <div className="text-gray-600 mt-1">{item.issue}</div>
                            )}
                          </div>
                        </td>
                        <td className="p-4 text-center">
                          {getStatusBadge(item.status)}
                        </td>
                        <td className="p-4 text-center">
                          <div className="space-y-1">
                            {item.defect && (
                              <div className="text-sm font-open-sans text-gray-500">{item.defect}</div>
                            )}
                            {item.microLeak && (
                              <div className="text-sm font-open-sans text-gray-500">{item.microLeak}</div>
                            )}
                            {item.leak && (
                              <div className="text-sm font-open-sans text-gray-500">{item.leak}</div>
                            )}
                          </div>
                        </td>
                      </tr>
                    ))
                  ))}
                </tbody>
              </table>
            </div>
          </div>

          {/* –ú–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è - –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π —Å–∫—Ä–æ–ª–ª —Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã */}
          <div className="md:hidden">
            <div className="overflow-x-auto">
              <table className="w-full min-w-[800px]">
                <thead>
                  <tr className="border-b bg-gray-50">
                    <th className="text-left p-3 font-montserrat font-semibold text-gray-700 min-w-[120px]">
                      –ö–∞—Ç–µ–≥–æ—Ä–∏—è
                    </th>
                    <th className="text-left p-3 font-montserrat font-semibold text-gray-700 min-w-[300px]">
                      –ö–æ–º–ø–æ–Ω–µ–Ω—Ç
                    </th>
                    <th className="text-center p-3 font-montserrat font-semibold text-gray-700 min-w-[100px]">
                      –û—Ü–µ–Ω–∫–∞
                    </th>
                    <th className="text-center p-3 font-montserrat font-semibold text-gray-700 min-w-[120px]">
                      –°—Ç–∞—Ç—É—Å
                    </th>
                  </tr>
                </thead>
                <tbody>
                  {diagnosticData.map((category, categoryIndex) => (
                    category.items.map((item, itemIndex) => (
                      <tr key={`${categoryIndex}-${itemIndex}`} className="border-b">
                        <td className="p-3 bg-gray-100 border-r min-w-[120px]">
                          {itemIndex === 0 && (
                            <div className="font-montserrat font-semibold text-gray-800 text-sm">
                              {category.category}
                            </div>
                          )}
                        </td>
                        <td className="p-3 min-w-[300px]">
                          <div className="font-open-sans text-gray-800 text-sm">
                            {item.name}
                            {item.issue && (
                              <div className="text-gray-600 mt-1 text-xs">{item.issue}</div>
                            )}
                          </div>
                        </td>
                        <td className="p-3 text-center min-w-[100px]">
                          {getStatusBadge(item.status)}
                        </td>
                        <td className="p-3 text-center min-w-[120px]">
                          <div className="space-y-1">
                            {item.defect && (
                              <div className="text-xs font-open-sans text-gray-500">{item.defect}</div>
                            )}
                            {item.microLeak && (
                              <div className="text-xs font-open-sans text-gray-500">{item.microLeak}</div>
                            )}
                            {item.leak && (
                              <div className="text-xs font-open-sans text-gray-500">{item.leak}</div>
                            )}
                          </div>
                        </td>
                      </tr>
                    ))
                  ))}
                </tbody>
              </table>
            </div>
            {/* –ü–æ–¥—Å–∫–∞–∑–∫–∞ –æ —Å–∫—Ä–æ–ª–ª–µ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö */}
            <div className="p-3 text-center bg-gray-50 border-t">
              <p className="text-xs font-open-sans text-gray-500">
                üëÜ –°–º–∞—Ö–Ω–∏—Ç–µ –≤–ª–µ–≤–æ/–≤–ø—Ä–∞–≤–æ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –∫–æ–ª–æ–Ω–æ–∫
              </p>
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  )
}

export default DiagnosticTable